{"version":3,"sources":["components/Tip.module.scss","components/Truth.module.scss","components/Chart.module.scss","components/Header.module.scss","components/News.module.scss","components/Trace.module.scss","services/index.ts","components/Hospital.tsx","components/Tip.tsx","components/Truth.tsx","components/Trace.tsx","components/Area.tsx","components/Header.tsx","components/Chart.tsx","components/Map.tsx","components/News.tsx","views/App.tsx","index.tsx","components/Hospital.module.scss"],"names":["module","exports","factHost","Hospital","useState","provinces","setProvinces","useEffect","axios","post","service","args","req","func","context","channel","then","res","data","code","rsp","className","styles","sectionTitle","healthIcon","hospital","map","item","index","hotelItemWrap","key","onClick","newProvinces","active","expandProvince","hotelProvince","name","provinceName","activeCount","count","Chart","style","fanghu_card","fanghu_title_warp","src","alt","fanghu_icon","fanghu_title","fanghu_item","fanghu_item_point","fanghu_item_text","Component","Truth","params","page","Promise","resolve","reject","jsonp","err","getTruth","content","id","rumor","rumor_more","Trace","trace","setTrace","JSON","parse","sort","a","b","time","news","titleWarp","hotzhuizhong","timelineMore","timeLine","singleNew","timeIcon","times","pass","newest","newsBox","title","desc","source","Area","props","areaTree","length","children","ite","ind","today","suspect","confirm","heal","dead","total","console","log","header","jump","jump_zhuizong","text","timeNum","lastUpdateTime","totalNum","first","add","spans","chinaAdd","p","chinaTotal","span","secound","third","fouth","wrapper","box","scale","value","type","dayAddList","dayList","dayDeadList","chinaDayAddList","forEach","push","date","chinaDayList","h5","height","forceFit","label","formatter","val","arr","slice","split","crosshairs","position","size","color","shape","stroke","lineWidth","that","window","Highcharts","Map","colorAxis","dataClasses","from","to","series","countryData","dataLabels","enabled","format","mapData","maps","joinBy","width","ProvinceList","News","province","setProvince","items","setItems","getNews","errno","curIndex","findIndex","curPro","provinceHtml","citytab","tap","tabtop","citychange","selectarea","onChange","e","target","changeArea","number","que","textItem","App","setTotal","setAreaTree","setDayList","setDayAddList","setCountryData","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c8f34cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fanghu_card\":\"Tip_fanghu_card__JshVP\",\"fanghu_title_warp\":\"Tip_fanghu_title_warp__1epel\",\"fanghu_icon\":\"Tip_fanghu_icon__1F-GA\",\"fanghu_title\":\"Tip_fanghu_title__Nj02J\",\"fanghu_item\":\"Tip_fanghu_item__3zYW8\",\"fanghu_item_point\":\"Tip_fanghu_item_point__2cUNP\",\"fanghu_item_text\":\"Tip_fanghu_item_text__3XX-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rumor\":\"Truth_rumor__2La7-\",\"sectionTitle\":\"Truth_sectionTitle__ex3lU\",\"rumor_more\":\"Truth_rumor_more__2imPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h5\":\"Chart_h5__2YEzS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1oJsR\",\"jump\":\"Header_jump__2GrLq\",\"jump_zhuizong\":\"Header_jump_zhuizong__3nd8d\",\"text\":\"Header_text__2n2dm\",\"timeNum\":\"Header_timeNum___8yRe\",\"totalNum\":\"Header_totalNum__1qLjs\",\"first\":\"Header_first__1GBiR\",\"p\":\"Header_p__WSGF5\",\"add\":\"Header_add__31JqM\",\"span\":\"Header_span__20Jpa\",\"secound\":\"Header_secound__j2o53\",\"third\":\"Header_third__1qtiV\",\"fouth\":\"Header_fouth__1eITm\",\"wrapper\":\"Header_wrapper__26JEL\",\"box\":\"Header_box__3K0Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citytab\":\"News_citytab__1cS7A\",\"tap\":\"News_tap__1X0d8\",\"tabtop\":\"News_tabtop__1vFnb\",\"name\":\"News_name__3N0Sc\",\"citychange\":\"News_citychange__1YhO1\",\"selectarea\":\"News_selectarea__2r8QJ\",\"count\":\"News_count__ZcoaZ\",\"number\":\"News_number__1YEeT\",\"add\":\"News_add__99aHT\",\"que\":\"News_que__1LuL8\",\"heal\":\"News_heal__11Iku\",\"dead\":\"News_dead__knNSU\",\"text\":\"News_text__3BwS4\",\"textItem\":\"News_textItem__3OMlY\",\"arr\":\"News_arr__3Baoc\",\"title\":\"News_title__1Fs-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"Trace_news__3uKxZ\",\"titleWarp\":\"Trace_titleWarp__3Ie8f\",\"sectionTitle\":\"Trace_sectionTitle__PXCWy\",\"hotzhuizhong\":\"Trace_hotzhuizhong__37-Hh\",\"timelineMore\":\"Trace_timelineMore__mpI84\",\"timeLine\":\"Trace_timeLine__1fdZc\",\"singleNew\":\"Trace_singleNew__3ApI2\",\"timeIcon\":\"Trace_timeIcon__2GQ5R\",\"times\":\"Trace_times__2xwfs\",\"pass\":\"Trace_pass__32EwM\",\"newest\":\"Trace_newest__11YmA\",\"newsBox\":\"Trace_newsBox__c_8ji\",\"title\":\"Trace_title__192sd\",\"desc\":\"Trace_desc__9F96u\",\"source\":\"Trace_source__S7JqC\"};","import axios from 'axios';\r\nimport jsonp from 'jsonp';\r\nimport { TruthType } from '../utils/types';\r\n\r\nconst factHost = '//fact.txxg.jasonandjay.com'; // '/fact'\r\nconst apiHost = '//api.txxg.jasonandjay.com'; // '/api'\r\nconst wechatHost = '//wechat.txxg.jasonandjay.com'; // '/fact'\r\nconst inewsHost = 'https://view.inews.qq.com'; // '/fact'\r\n\r\n// 获取全国省份列表\r\nexport const getHospitalProvince = ()=>{\r\n    return axios.post(`${wechatHost}/api/THPneumoniaService/getHospitalProvince`,{\r\n        service: 'THPneumoniaOuterService',\r\n        args: {req:{}},\r\n        func: 'getHospitalProvince',\r\n        context: {channel: 'AAEEviDRbllNrToqonqBmrER'}\r\n    })\r\n}\r\n//辟谣信息\r\nexport const getTruth=(params:TruthType={page:0})=>{\r\n    return new Promise((resolve,reject)=>{\r\n        jsonp(`${factHost}/loadmore?page=${params.page}`,{},(err,data)=>{\r\n            if(err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n }\r\n //最新进展\r\n \r\n export const getTrace = ()=>{\r\n    return new Promise((resolve, reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=wuwei_ww_time_line`, {}, (err, data)=>{\r\n            if (err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n//最新疫情数据\r\nexport const getDisease=()=>{\r\n    return new Promise((resolve,reject)=>{\r\n        jsonp(`${inewsHost}/g2/getOnsInfo?name=disease_h5`,{},(err,data)=>{\r\n            if(err){\r\n                reject(err)\r\n            }else{\r\n                resolve(data)\r\n            }\r\n        })\r\n    })\r\n}\r\n// 省份疫情防治列表\r\nexport const getProvinceNews = (code: string)=>{\r\n    return axios.post(`${apiHost}/news/v1/province/news/list?province_code=`+code);\r\n}\r\n\r\n\r\n ","import React, {useState, useEffect} from 'react'\r\nimport {getHospitalProvince} from '../services/index'\r\nimport styles from './Hospital.module.scss'\r\n\r\ninterface ProType {\r\n    provinceName: string\r\n    citys: any[],\r\n    cityCnt: number,\r\n    active?: boolean\r\n}\r\n\r\nconst Hospital = ()=>{\r\n    // 定义全国医院数据\r\n    let [provinces, setProvinces] = useState<ProType[]>([]);\r\n\r\n    // 获取全国医院数据\r\n    useEffect(()=>{\r\n        getHospitalProvince().then((res:any)=>{\r\n        res = res.data;\r\n        if(res.code == 0){\r\n            setProvinces(res.args.rsp.provinces);\r\n        }\r\n        })\r\n    }, []);\r\n    \r\n    const expandProvince = (index: number)=>{\r\n        let newProvinces = [...provinces];\r\n        newProvinces[index].active = !provinces[index].active;\r\n\r\n        setProvinces(newProvinces)\r\n    }\r\n\r\n    return <>\r\n        <div className={styles.sectionTitle}>医疗救治医院查询\r\n          <div className={styles.healthIcon}></div>\r\n        </div>\r\n        <div className={styles.hospital}>{\r\n            provinces.map((item, index)=>{\r\n                return <div className={styles.hotelItemWrap} key={index} onClick={()=>expandProvince(index)}>\r\n                <div className={styles.hotelProvince}>\r\n                    <div className={styles.name}>{item.provinceName}</div>\r\n                    <div className={item.active?styles.activeCount:styles.count}></div>\r\n                </div>\r\n             </div>\r\n            })\r\n        }</div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","\r\n//import {getHospitalProvince} from '../services/index'\r\nimport React, { useState, useEffect, Component } from 'react'\r\nimport style from './Tip.module.scss'\r\nexport default class Chart extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p >新型肺炎预防须知</p>\r\n                <div className={style.fanghu_card}>\r\n                    <div className={style.fanghu_title_warp}>\r\n                        <img src=\"https://puui.qpic.cn/vupload/0/1580113954413_67dj6qw9r34.png/0\" alt=\"\" className={style.fanghu_icon} />\r\n                        <div className={style.fanghu_title}>个人清洁</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>经常保持双手清洁，尤其在触摸口，鼻或眼之前</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>经用洗手液和清水清洗双手，搓手最少20秒，并用纸巾擦干。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>打喷嚏或咳嗽时应用纸巾掩盖口鼻，把用过的纸巾弃置于有盖垃圾箱内，然后彻底清洁双手。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_title_warp}>\r\n                        <img src=\"https://puui.qpic.cn/vupload/0/1580113954413_b3dr1w759hr.png/0\" alt=\"\" className={style.fanghu_icon} />\r\n                        <div className={style.fanghu_title}>尽量避免</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>减少前往人流密集的场所。如不可避免，应戴上外科口罩。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>避免到访医院。如有必要到访医院，应佩戴外科口罩及时刻注重个人和手部卫生。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>避免接触动物（包括野味）、禽鸟或其粪便；避免到海鲜、活禽市场或农场。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>切勿进食野味及切勿光顾有提供野味的餐馆。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>注意食物安全和卫生，避免进食或饮用生或未熟透的动物产品，包括奶类、蛋类和肉类。</div>\r\n                    </div>\r\n                    <div className={style.fanghu_title_warp}>\r\n                        <img src=\"https://puui.qpic.cn/vupload/0/1580113954413_qs8jz3v8m7.png/0\" alt=\"\" className={style.fanghu_icon} />\r\n                        <div className={style.fanghu_title}>尽快就诊</div>\r\n                    </div>\r\n                    <div className={style.fanghu_item}>\r\n                        <div className={style.fanghu_item_point}></div>\r\n                        <div className={style.fanghu_item_text}>如有身体不适，特别是有发烧或咳嗽，应戴上外科口罩并尽快就诊。</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getTruth } from '../services/index'\r\nimport style from './Truth.module.scss'\r\n\r\ninterface ProType {\r\n    title: string,\r\n    abstract: string\r\n}\r\n\r\nconst Truth = () => {\r\n    // 定义数据\r\n    let [truth, setTruth] = useState([]);\r\n\r\n    // 获取辟谣数据\r\n    useEffect(() => {\r\n        getTruth().then((res: any) => {\r\n\r\n            res = res.content\r\n        })\r\n    }, []);\r\n\r\n    return <>\r\n        <div id={style.rumor}>\r\n            <div className={style.sectionTitle}>\r\n\r\n                辟谣信息\r\n      </div>\r\n            <div className={style.rumor_more}>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default Truth\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getTrace } from '../services/index'\r\nimport styles from './Trace.module.scss'\r\ninterface TraceType {\r\n    time: string,\r\n    create_time: string,\r\n    source: string,\r\n    desc: string,\r\n    title: string\r\n}\r\n\r\nconst Trace = () => {\r\n    // 定义最新进展\r\n    let [trace, setTrace] = useState<TraceType[]>([]);\r\n\r\n    // 获取最新进展数据\r\n    useEffect(() => {\r\n        getTrace().then((res: any) => {\r\n            let data = JSON.parse(res.data) as TraceType[];\r\n            data.sort((a, b) => {\r\n                if (a.time > b.time) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            })\r\n            setTrace(data);\r\n        })\r\n    }, []);\r\n\r\n\r\n    return <div className={styles.news}>\r\n        <div className={styles.titleWarp}>\r\n            <div className={styles.sectionTitle}>最新进展\r\n                <div className={styles.hotzhuizhong}>\r\n                    <div>\r\n                        <span className={styles.timelineMore}></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.timeLine}></div>\r\n            {\r\n                trace.map((item, index) => {\r\n                    return <div className={styles.singleNew} key={index}>\r\n                        <div className={styles.timeIcon}></div>\r\n                        <div className={styles.times} >\r\n                            {/* 时间 */}\r\n                            <span className={styles.pass}>{item.time}</span>\r\n                            <div className={styles.newest}></div>\r\n                        </div>\r\n                        <div className={styles.newsBox}>\r\n                            {/* 标题 */}\r\n                            <div className={styles.title}>{item.title}</div>\r\n                            {/* 内容 */}\r\n                            <div className={styles.desc}>{item.desc}</div>\r\n                            {/* 来源 */}\r\n                            <div className={styles.source}>{item.source}</div>\r\n                        </div>\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Trace\r\n","import React, {useState, useEffect} from 'react'\r\nimport {AreaType} from '../utils/types'\r\nimport './Area.module.scss'\r\n\r\nconst Area = (props: {areaTree:AreaType []})=>{\r\n    let data = props.areaTree. length?props.areaTree[0]. children as AreaType[]:[]\r\n    // console.log('area...111111', data);\r\n    const unfold = (index: number) => {\r\n        \r\n    }\r\n    return <>\r\n        <div className=\"up-tips up-gnbl\">\r\n            国内病例\r\n            <span className=\"tips\">\r\n                （7:00-10:00为更新高峰，数据如有滞后请谅解）\r\n            </span>\r\n        </div>\r\n        <div className=\"clearfix placeItem nav\" id=\"placeNav\">\r\n            <h2 className=\"blue\">地区</h2>\r\n            <div className=\"blue\">新增确诊</div>\r\n            <div>累计确诊</div>\r\n            <div>治愈</div>\r\n            <div>死亡</div>\r\n        </div>\r\n        <div className=\"placeItemWrap\">\r\n            {\r\n                // News areaTree={ areaTree. length?areaTree[0]. children as AreaType[]:[]}/>\r\n                data.map((ite,ind) => {\r\n                    return <div className=\"placeItemWrap\" key={ind}>\r\n                        <div className=\"clearfix placeItem placeArea\" key={ind} onClick = {() => unfold(ind)}>\r\n                            <h2 className=\"blue\">{ite.name}</h2>\r\n                            <div className=\"add ac_add blue\">{ite.today.suspect}</div>\r\n                            <div className=\"confirm\">{ite.today.confirm}</div>\r\n                            <div className=\"heal\">{ite.today.heal}</div>\r\n                            <div className=\"dead\">{ite.today.dead}</div>\r\n                        </div>\r\n                        <div>\r\n                            {/* {\r\n                                (ite.children as AreaType[]).map((val,ide)=>{\r\n                                    return <div key={ide}>\r\n                                        <p>{val.name}</p>\r\n                                    </div>\r\n                                })\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                })\r\n\r\n            }\r\n             \r\n        </div>\r\n        <div className=\"up-tips up-gnbl\">\r\n            海外国家\r\n            <span className=\"tip\">\r\n                确诊  例，死亡  例\r\n            </span>\r\n        </div>\r\n        <div className=\"clearfix placeItem nav\" id=\"placeNav\">\r\n            <h2 className=\"blue\">地区</h2>\r\n            <div className=\"blue\">确诊</div>\r\n            <div>治愈</div>\r\n            <div>死亡</div>\r\n        </div>\r\n        <div>\r\n\r\n        </div>\r\n            {\r\n                props.areaTree&&props.areaTree.map((item,index)=>{\r\n                    return <div className=\"clearfix placeItem placeArea no-sharp abroad\" key={index}>                      \r\n                        <h2 className=\"blue\">{item.name}</h2>\r\n                        <div className=\"confirm\">{item.total.confirm}</div>\r\n                        <div className=\"heal\">{item.total.heal}</div>\r\n                        <div className=\"dead\">{item.total.dead}</div>\r\n                    </div>\r\n                })\r\n            }\r\n              \r\n    </>\r\n}\r\n\r\n\r\nexport default Area\r\n","import React, {useState, useEffect} from 'react'\r\nimport {TotalType} from '../utils/types'\r\nimport style from './Header.module.scss'\r\n\r\nconst Hospital = (props: {total: TotalType})=>{\r\n    console.log('total...', props.total)\r\n    return <>\r\n <div className={style.header}>\r\n     <img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/top_headv3.png\" alt=\"\"/>\r\n<div className={style.jump}>\r\n   \r\n</div>\r\n<div className={style.jump_zhuizong}>\r\n    \r\n</div>\r\n<div className={style.text}>\r\n    <span>数据来源：国家及各地卫健委每日信息发布</span>\r\n</div>\r\n\r\n </div>\r\n <div className={style.timeNum}>\r\n统计截至{props.total&&props.total.lastUpdateTime}更新于12分钟前\r\n</div>\r\n<div className={style.totalNum}>\r\n                <div className={style.first}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.confirm}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.confirm}</p>\r\n                    <p className={style.span}>全国确诊</p>\r\n                </div>\r\n                <div className={style.secound}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.suspect}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.suspect}</p>\r\n                    <p className={style.span}>疑似病例</p>\r\n                </div>\r\n                <div className={style.third}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.heal}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.heal}</p>\r\n                    <p className={style.span}>治愈人数</p>\r\n                </div>\r\n                <div className={style.fouth}>\r\n                    <p className={style.add}>较上日<b className={style.spans}>+{props.total && props.total.chinaAdd.dead}</b></p>\r\n                    <p className={style.p}>{props.total && props.total.chinaTotal.dead}</p>\r\n                    <p className={style.span}>死亡人数</p>\r\n                </div>\r\n            </div>\r\n            <div className={style.wrapper}>\r\n                <div className={style.box}>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_rili.png\" alt=\"\"/>战疫日历</p>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_plot.png\" alt=\"\"/>小区查询</p>\r\n                    <p><img src=\"https://mat1.gtimg.com/news/images/inews/2020/feiyan/18/img/icon_train.png\" alt=\"\"/>同乘查询</p>\r\n                </div>\r\n            </div>\r\n \r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital","import React, {useState, useEffect} from 'react'\r\nimport style from './Chart.module.scss'\r\nimport {\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Legend,\r\n  } from \"bizcharts\";\r\n\r\ninterface ProType {\r\n    chinaDayAddList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>,\r\n    chinaDayList: Array<{\r\n        date: string,\r\n        confirm: string,\r\n        suspect: string,\r\n        dead: string,\r\n        heal: string\r\n    }>\r\n}\r\n\r\nconst Hospital = (props: ProType)=>{\r\n    console.log('props...', props);\r\n    // debugger;\r\n\r\n    const scale = {\r\n        value: {\r\n            type: 'linear',\r\n        }\r\n    }\r\n    let dayAddList:Array<{}> = [], dayList:Array<{}> = [], dayDeadList:Array<{}> = [];\r\n    props.chinaDayAddList.forEach(item=>{\r\n        dayAddList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n    })\r\n    props.chinaDayList.forEach(item=>{\r\n        dayList.push({\r\n            date:item.date,\r\n            type: '确诊人数',\r\n            value: item.confirm\r\n        },{\r\n            date:item.date,\r\n            type: '疑似人数',\r\n            value: item.suspect\r\n        })\r\n        dayDeadList.push({\r\n            date:item.date,\r\n            type: '治愈人数',\r\n            value: item.heal\r\n        },{\r\n            date:item.date,\r\n            type: '死亡人数',\r\n            value: item.dead\r\n        })\r\n    })\r\n    return <>\r\n        {/* 疫情新增趋势（人） */}\r\n        <section>\r\n            <h3 className={style.h5}>疫情新增趋势（人）</h3>\r\n            <Chart height={400} data={dayAddList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计确诊疑似趋势（人） */}\r\n        <section>\r\n        <h3 className={style.h5}> 累计确诊疑似趋势（人）</h3>\r\n            <Chart height={400} data={dayList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        {/* 累计治愈死亡趋势（人） */}\r\n        <section>\r\n        <h3 className={style.h5}>疫情新增趋势</h3>\r\n            <Chart height={400} data={dayDeadList} scale={scale} forceFit>\r\n                <Legend />\r\n                <Axis name=\"date\"\r\n                    label={{\r\n                        formatter: val =>{\r\n                            let arr = val.slice(1).split('.');\r\n                            return `${arr[0]}-${arr[1]}`\r\n                        } \r\n                    }}\r\n                />\r\n                <Tooltip crosshairs={{type: \"y\"}}/>\r\n                <Geom\r\n                    type=\"line\"\r\n                    position=\"date*value\"\r\n                    size={2}\r\n                    color=\"type\"\r\n                    shape={\"smooth\"}\r\n                />\r\n                <Geom\r\n                    type=\"point\"\r\n                    position=\"date*value\"\r\n                    size={4}\r\n                    color=\"type\"\r\n                    style={{\r\n                        stroke: \"#fff\",\r\n                        lineWidth: 1\r\n                    }}\r\n                />\r\n            </Chart>\r\n        </section>\r\n        <p>数据来源：国家卫健委官网发布，每日更新一次</p>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","import React, { useEffect } from 'react'\r\n\r\n\r\ninterface PropType {\r\n    countryData: Array<{\r\n        name: string,\r\n        value: number\r\n    }>\r\n}\r\n\r\nconst Hospital = (props: PropType) => {\r\n    let that: any = window;\r\n    useEffect(() => {\r\n        new that.Highcharts.Map('map', {\r\n            colorAxis: {\r\n                dataClasses: [{\r\n                    color: '#FFEFD7',\r\n                    from: 1,\r\n                    name: '1-9人',\r\n                    to: 9\r\n                }, {\r\n                    color: '#FFD2A0',\r\n                    from: 10,\r\n                    name: '10-99人',\r\n                    to: 90\r\n                }, {\r\n                    color: '#FE8664',\r\n                    from: 100,\r\n                    name: '100-499人',\r\n                    to: 499\r\n                }, {\r\n                    color: '#E64B47',\r\n                    from: 500,\r\n                    name: '500-999人',\r\n                    to: 999\r\n                }, {\r\n                    color: '#C91014',\r\n                    from: 1000,\r\n                    name: '1000-9999人',\r\n                    to: 9999\r\n                }, {\r\n                    color: '#9C0A0D',\r\n                    from: 10000,\r\n                    name: '10000人以上'\r\n                }]\r\n                //   min: 0,\r\n                //   minColor: '#FFEFD7',\r\n                //   maxColor: '#9C0A0D'\r\n            },\r\n            series: [{\r\n                data: props.countryData,\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '{point.name}'\r\n                },\r\n                name: '确诊',\r\n                mapData: that.Highcharts.maps['cn/china'],\r\n                joinBy: 'name' // 根据 name 属性进行关联\r\n            }]\r\n        });\r\n    }, [props.countryData]);\r\n\r\n    return <>\r\n        <div id=\"map\" style={{ width: '390px', height: '500px' }}></div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Hospital\r\n","import React, { useState, useEffect } from 'react'\r\nimport {getProvinceNews} from '../services/index'\r\nimport {AreaType} from '../utils/types'\r\nimport style from './News.module.scss'\r\n\r\ninterface ProvinceType{\r\n    [key: string]: string\r\n}\r\ninterface ItemType{\r\n    \"title\": string,\r\n    \"publish_time\": string,\r\n    \"news_url\": string,\r\n    \"cms_id\": string\r\n}\r\nconst ProvinceList:ProvinceType = {\r\n    \"hb\": \"湖北\",\r\n    \"zj\": \"浙江\",\r\n    \"gd\": \"广东\",\r\n    \"henan\": \"河南\",\r\n    \"hn\": \"湖南\",\r\n    \"ah\": \"安徽\",\r\n    \"jiangxi\": \"江西\",\r\n    \"cq\": \"重庆\",\r\n    \"jiangsu\": \"江苏\",\r\n    \"cd\": \"四川\",\r\n    \"sd\": \"山东\",\r\n    \"bj\": \"北京\",\r\n    \"sh\": \"上海\",\r\n    \"fj\": \"福建\",\r\n    \"heilongjiang\": \"黑龙江\",\r\n    \"xian\": \"陕西\",\r\n    \"guangxi\": \"广西\",\r\n    \"hebei\": \"河北\",\r\n    \"yn\": \"云南\",\r\n    \"hainan\": \"海南\",\r\n    \"ln\": \"辽宁\",\r\n    \"shanxi\": \"山西\",\r\n    \"tj\": \"天津\",\r\n    \"guizhou\": \"贵州\",\r\n    \"gansu\": \"甘肃\",\r\n    \"jilin\": \"吉林\",\r\n    \"neimenggu\": \"内蒙古\",\r\n    \"ningxia\": \"宁夏\",\r\n    \"xinjiang\": \"新疆\",\r\n    \"hk\": \"香港\",\r\n    \"qinghai\": \"青海\",\r\n    \"taiwan\": \"台湾\",\r\n    \"macau\": \"澳门\",\r\n    \"xizang\": \"西藏\"\r\n}\r\n\r\n\r\nconst News = (props: {areaTree: AreaType[]}) => {\r\n    let [province, setProvince] = useState<string>('hb');\r\n    let [items, setItems] = useState<ItemType []>([])\r\n\r\n    let changeArea = (e:React.ChangeEvent<HTMLSelectElement>)=>{\r\n        setProvince(e.target.value);\r\n        getNews();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getNews();\r\n    }, [])\r\n\r\n    const getNews = ()=>{\r\n        getProvinceNews(province).then((res:any)=>{\r\n            res = res.data;\r\n            if (res.errno === 0){\r\n                setItems(res.data.items);\r\n            }\r\n        })\r\n    }\r\n\r\n   // console.log('news...', items);\r\n\r\n    let curIndex = props.areaTree.findIndex(item=>item.name === ProvinceList[province]);\r\n    let curPro = props.areaTree[curIndex];\r\n\r\n    // 拼接各省份选项\r\n    const provinceHtml = [];\r\n    for (let key in ProvinceList){\r\n        provinceHtml.push(<option key={ProvinceList[key]} value={key}>{ProvinceList[key]}</option>);\r\n    }\r\n    return <>\r\n    <div className={style.citytab}>\r\n        <div className={style.tap}>\r\n        <div className={style.tabtop}>\r\n             <span className={style.name}>{ProvinceList[province]}</span>\r\n                疫情速报\r\n          </div>\r\n          <div className={style.citychange}>\r\n            <select id={style.selectarea} onChange={(e:React.ChangeEvent<HTMLSelectElement>)=>changeArea(e)}>\r\n                <option value=\"hb\">切换城市</option>\r\n                {provinceHtml}\r\n            </select>\r\n        </div>\r\n        </div>\r\n        <div className={style.count}>\r\n            <li>\r\n                <span className={style.add}>{curPro && curPro.today.confirm}</span>\r\n                <span className={style.number}>新增确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.que}>{curPro && curPro.total.confirm}</span>\r\n                <span className={style.number}>累计确诊</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.heal}>{curPro && curPro.total.heal}</span>\r\n                <span className={style.number}>治愈人数</span>\r\n            </li>\r\n            <li>\r\n                <span className={style.dead}>{curPro && curPro.total.dead}</span>\r\n                <span className={style.number}>死亡人数</span>\r\n            </li>\r\n        </div>\r\n        <div className={style.text}>\r\n            {\r\n               items.map((item,index)=>{\r\n                   return(\r\n                  <div className={style.textItem} key={index}>\r\n                      <div className={style.arr}></div> \r\n                      <div className={style.title}>\r\n                          <i></i>\r\n                          {item.title}\r\n                          </div>\r\n                     \r\n                  </div>\r\n                   )\r\n               \r\n               }) \r\n            }\r\n        </div>\r\n</div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default News\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { TotalType, AreaType } from '../utils/types'\r\nimport { getDisease } from '../services/index'\r\n// 引入模块\r\nimport Hospital from '../components/Hospital';\r\nimport Tip from '../components/Tip';\r\nimport Truth from '../components/Truth';\r\nimport Trace from '../components/Trace';\r\nimport Area from '../components/Area';\r\nimport Header from '../components/Header'\r\nimport Chart from '../components/Chart'\r\nimport Map from '../components/Map'\r\nimport News from '../components/News';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  // 疫情概况\r\n  let [total, setTotal] = useState<TotalType>();\r\n  //疫情区域分布\r\n  let [areaTree, setAreaTree] = useState<AreaType[]>([]);\r\n  // 每日数据\r\n  let [dayList, setDayList] = useState([]);\r\n  // 每日新增数据\r\n  let [dayAddList, setDayAddList] = useState([]);\r\n  // 全国疫情分布\r\n  let [countryData, setCountryData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDisease().then((res: any) => {\r\n      res = JSON.parse(res.data);\r\n       //console.log('res...', res);\r\n      let { chinaTotal, chinaAdd, lastUpdateTime, areaTree, chinaDayList, chinaDayAddList } = res;\r\n      // 赋值数据\r\n      setTotal({ chinaTotal, chinaAdd, lastUpdateTime });\r\n      setAreaTree(areaTree);\r\n      setDayList(chinaDayList)\r\n      setDayAddList(chinaDayAddList);\r\n      let countryData = areaTree[0].children.map((item: any)=>{\r\n        return {\r\n          name: item.name,\r\n          value: item.total.confirm\r\n        }\r\n      })\r\n      setCountryData(countryData);\r\n    })\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <Header total={total as TotalType} />\r\n      <Map countryData={countryData}/>\r\n      <Chart chinaDayAddList={dayAddList} chinaDayList={dayList}/>\r\n      <News areaTree={areaTree.length?areaTree[0].children as AreaType[]:[]}/>\r\n     <Area areaTree={areaTree} />\r\n     <Trace />\r\n      <Truth />\r\n      <Hospital />\r\n      <Tip />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Hospital_sectionTitle__HIiJp\",\"healthIcon\":\"Hospital_healthIcon__3HEgX\",\"hospital\":\"Hospital_hospital__1paUb\",\"hotelItemWrap\":\"Hospital_hotelItemWrap__-DCYn\",\"hotelProvince\":\"Hospital_hotelProvince__1rl9C\",\"name\":\"Hospital_name__1ezcO\",\"count\":\"Hospital_count__lUoxu\",\"activeCount\":\"Hospital_activeCount__3K-gP Hospital_count__lUoxu\"};"],"sourceRoot":""}